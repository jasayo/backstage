# This workflow uses actions that are not certified by GitHub.
# São fornecidas por terceiros e regidas por
# termos de serviço, política de privacidade e suporte separados
# documentação.

name: main

on:
  push:
    branches: [ main ]

permissions:
  pull-requests: write
  issues: write
  repository-projects: write

jobs:
  vars:
    name: Setup Environment 🛠️
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.vars.outputs.tag }}
    steps:
      - id: vars
        run: |
          if [[ ! "$GITHUB_REF" =~ refs/tags ]]; then
            echo "::set-output name=tag::$(echo $GITHUB_SHA | cut -c 1-8)"
          else
            echo "::set-output name=tag::$(echo $GITHUB_REF | cut -d / -f 3)"
          fi
      - run: echo "${{ steps.vars.outputs.tag }}"

  sonarqube:
    name: SonarQube Scan 🔍
    runs-on: ubuntu-latest
    needs:
      - vars
    steps:
    - uses: actions/checkout@master
    - name: SonarQube Scan 🔍
      uses: kitabisa/sonarqube-action@v1.2.0
      with:
        host: ${{ secrets.SONARQUBE_HOST }}
        login: ${{ secrets.SONARQUBE_TOKEN }}

  build-and-push:
    name: Push Docker Image 📦
    runs-on: ubuntu-latest
    needs:
      - vars
      - sonarqube
    steps:
      - name: Check out the repo 🛠️
        uses: actions/checkout@v3

      - name: Log in to Docker Hub 🪪
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker 🚀
        run: |
          cd app/
          yarn add --cwd packages/app @backstage/plugin-kubernetes @backstage/plugin-search @backstage/plugin-search-react @backstage/plugin-catalog
          yarn install --frozen-lockfile
          yarn tsc
          yarn build
          docker image build . -f packages/backend/Dockerfile --tag diegoluisi/backstage:${{ needs.vars.outputs.tag }}
          docker push diegoluisi/backstage:${{ needs.vars.outputs.tag }}

  deploy:
    name: GitOps Deploy 🏗️
    runs-on: ubuntu-latest
    needs:
      - vars
      - sonarqube
      - build-and-push

    steps:
    - name: Set Kustomize 🛠️
      uses: imranismail/setup-kustomize@v1
      with:
        kustomize-version: "3.9.4"

    # - name: Git Checkout 🛎️
    #   uses: actions/checkout@v3
    #   with:
    #     repository: 'devxp-tech/gitops'

    - name: Git Setup 🔨
      run: |
        git clone https://${{ secrets.ACCESS_TOKEN_GITHUB }}@github.com/devxp-tech/gitops
        cd gitops
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

    - name: Update Backstage Tag Image ✨
      run: |
        cd gitops/apps/backstage/overlays/prd
        kustomize edit set image diegoluisi/backstage:${{ needs.vars.outputs.tag }}

    - name: Commit and Push 🚀
      run: |
        cd gitops/
        git commit -am ":robot: [GitHub Action] Set new image tag to https://github.com/devxp-tech/backstage/commit/${{ needs.vars.outputs.tag }}"
        git push

    # - name: Push changes 🚀
    #   uses: ad-m/github-push-action@master
    #   with:
    #     github_token: ${{ secrets.ACCESS_TOKEN_GITHUB }}
    #     repository: devxp-tech/gitops


  slack-workflow-status:
    if: always()
    name: Post Status To Slack  📣
    needs:
      - vars
      - sonarqube
      - build-and-push
      - deploy
    runs-on: ubuntu-latest
    steps:
      - name: Slack Workflow Notification
        uses: Gamesight/slack-workflow-status@master
        with:
          # Required Input
          repo_token: ${{secrets.GITHUB_TOKEN}}
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK }}
          # Optional Input
          channel: 'github-notifications'
          name: 'github-notifications'
          # icon_emoji: ':poop:'
          icon_url: '${{ secrets.SLACK_ICON }}'
